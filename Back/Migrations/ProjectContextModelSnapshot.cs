// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using musiC.Data;

namespace musiC.Migrations
{
    [DbContext(typeof(ProjectContext))]
    partial class ProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("musiC.Models.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BibliotecaId")
                        .HasColumnType("int");

                    b.Property<int?>("artistaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("criadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BibliotecaId");

                    b.HasIndex("artistaId");

                    b.ToTable("Albuns");
                });

            modelBuilder.Entity("musiC.Models.Artista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artistas");
                });

            modelBuilder.Entity("musiC.Models.Biblioteca", b =>
                {
                    b.Property<int>("BibliotecaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("BibliotecaId");

                    b.ToTable("Bibliotecas");
                });

            modelBuilder.Entity("musiC.Models.Musica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int?>("artistaId")
                        .HasColumnType("int");

                    b.Property<string>("genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("lancamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("artistaId");

                    b.ToTable("Musicas");
                });

            modelBuilder.Entity("musiC.Models.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BibliotecaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("criadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BibliotecaId");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("musiC.Models.Usuario", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Classe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("musiC.Models.Album", b =>
                {
                    b.HasOne("musiC.Models.Biblioteca", null)
                        .WithMany("albuns")
                        .HasForeignKey("BibliotecaId");

                    b.HasOne("musiC.Models.Artista", "artista")
                        .WithMany()
                        .HasForeignKey("artistaId");

                    b.Navigation("artista");
                });

            modelBuilder.Entity("musiC.Models.Musica", b =>
                {
                    b.HasOne("musiC.Models.Album", null)
                        .WithMany("musicas")
                        .HasForeignKey("AlbumId");

                    b.HasOne("musiC.Models.Artista", "artista")
                        .WithMany()
                        .HasForeignKey("artistaId");

                    b.Navigation("artista");
                });

            modelBuilder.Entity("musiC.Models.Playlist", b =>
                {
                    b.HasOne("musiC.Models.Biblioteca", null)
                        .WithMany("playlists")
                        .HasForeignKey("BibliotecaId");
                });

            modelBuilder.Entity("musiC.Models.Album", b =>
                {
                    b.Navigation("musicas");
                });

            modelBuilder.Entity("musiC.Models.Biblioteca", b =>
                {
                    b.Navigation("albuns");

                    b.Navigation("playlists");
                });
#pragma warning restore 612, 618
        }
    }
}
